{"version":3,"sources":["webpack:///./src/app/modules/goals/components/goals/create-goal/create-goal.component.css","webpack:///./src/app/modules/goals/components/goals/create-goal/create-goal.component.html","webpack:///./src/app/modules/goals/components/goals/create-goal/create-goal.component.ts","webpack:///./src/app/modules/goals/components/goals/goal-details/goal-details.component.css","webpack:///./src/app/modules/goals/components/goals/goal-details/goal-details.component.html","webpack:///./src/app/modules/goals/components/goals/goal-details/goal-details.component.ts","webpack:///./src/app/modules/goals/components/goals/goals.component.css","webpack:///./src/app/modules/goals/components/goals/goals.component.html","webpack:///./src/app/modules/goals/components/goals/goals.component.ts","webpack:///./src/app/modules/goals/components/group-goals/create-group-goal/create-group-goal.component.css","webpack:///./src/app/modules/goals/components/group-goals/create-group-goal/create-group-goal.component.html","webpack:///./src/app/modules/goals/components/group-goals/create-group-goal/create-group-goal.component.ts","webpack:///./src/app/modules/goals/components/group-goals/create-group/create-group.component.css","webpack:///./src/app/modules/goals/components/group-goals/create-group/create-group.component.html","webpack:///./src/app/modules/goals/components/group-goals/create-group/create-group.component.ts","webpack:///./src/app/modules/goals/components/group-goals/group-goal-details/group-goal-details.component.css","webpack:///./src/app/modules/goals/components/group-goals/group-goal-details/group-goal-details.component.html","webpack:///./src/app/modules/goals/components/group-goals/group-goal-details/group-goal-details.component.ts","webpack:///./src/app/modules/goals/components/group-goals/group-goals.component.css","webpack:///./src/app/modules/goals/components/group-goals/group-goals.component.html","webpack:///./src/app/modules/goals/components/group-goals/group-goals.component.ts","webpack:///./src/app/modules/goals/components/group-goals/group-members/group-invitation/group-invitation.component.css","webpack:///./src/app/modules/goals/components/group-goals/group-members/group-invitation/group-invitation.component.html","webpack:///./src/app/modules/goals/components/group-goals/group-members/group-invitation/group-invitation.component.ts","webpack:///./src/app/modules/goals/components/group-goals/group-members/group-users/group-users.component.css","webpack:///./src/app/modules/goals/components/group-goals/group-members/group-users/group-users.component.html","webpack:///./src/app/modules/goals/components/group-goals/group-members/group-users/group-users.component.ts","webpack:///./src/app/modules/goals/components/group-goals/leaderboard/leaderboard.component.css","webpack:///./src/app/modules/goals/components/group-goals/leaderboard/leaderboard.component.html","webpack:///./src/app/modules/goals/components/group-goals/leaderboard/leaderboard.component.ts","webpack:///./src/app/modules/goals/components/today-goals/today-goals.component.css","webpack:///./src/app/modules/goals/components/today-goals/today-goals.component.html","webpack:///./src/app/modules/goals/components/today-goals/today-goals.component.ts","webpack:///./src/app/modules/goals/goals-routing.module.ts","webpack:///./src/app/modules/goals/goals.module.ts","webpack:///./src/app/modules/goals/models/goal-progress.model.ts","webpack:///./src/app/modules/goals/models/goal-with-progress.model.ts","webpack:///./src/app/modules/goals/models/goal.model.ts","webpack:///./src/app/modules/goals/services/goals/goal-progress/goal-progress.service.ts","webpack:///./src/app/modules/goals/services/goals/goals.service.ts","webpack:///./src/app/modules/goals/services/group/group-goal-progress/group-goal-progress.service.ts","webpack:///./src/app/modules/goals/services/group/group-goal/group-goal.service.ts","webpack:///./src/app/modules/goals/services/group/group-invitation/group-invitation.service.ts","webpack:///./src/app/modules/goals/services/group/group-members/group-members.service.ts","webpack:///./src/app/modules/goals/services/group/group.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,+DAA+D,mM;;;;;;;;;;;ACA/D,o5CAAo5C,wEAAwE,KAAK,gDAAgD,kBAAkB,KAAK,oBAAoB,wBAAwB,kBAAkB,0tB;;;;;;;;;;;;;;;;;;;;;ACAjiD;AACnB;AACkB;AAC3B;AACwC;AAOjF;IAUE,6BAAoB,YAAyB,EAAU,aAA2B,EACxE,OAAe,EAAU,eAA+B;QADlE,iBAMC;QANmB,iBAAY,GAAZ,YAAY,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAc;QACxE,YAAO,GAAP,OAAO,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAgB;QAVlE,aAAQ,GAAG,GAAG,CAAC;QAEf,qBAAgB,GAAG,KAAK,CAAC;QAMzB,iBAAY,GAAG,IAAI,CAAC;QAGlB,IAAI,CAAC,eAAe,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,UAAC,QAAe;YACrE,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC1C,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC3C,CAAC,CAAC;QAEH,gDAAgD;QAChD,0DAA0D;QAC1D,MAAM;IACR,CAAC;IAED,gBAAgB;IAChB,iCAAiC;IACjC,IAAI;IAEJ,4CAAc,GAAd;QACE,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,EAAE;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,IAAI,IAAI,CAAC,SAAS,EAAE;YAC3C,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,oCAAM,GAAN;QAAA,iBASC;QARC,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,EAAE;YACzB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,CAAC;iBAC5E,SAAS,CAAC,kBAAQ,IAAI,YAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAjC,CAAiC,CAAC,CAAC;SAC7D;QACD,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,EAAE;YACzB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC;iBAC5F,SAAS,CAAC,kBAAQ,IAAI,YAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAjC,CAAiC,CAAC,CAAC;SAC7D;IACH,CAAC;IApDU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,oJAA2C;;SAE5C,CAAC;+EAWkC,0DAAW,EAAyB,0EAAY;YAC/D,sDAAM,EAA2B,8FAAc;OAXvD,mBAAmB,CAqD/B;IAAD,0BAAC;CAAA;AArD+B;;;;;;;;;;;;ACXhC,+DAA+D,uM;;;;;;;;;;;ACA/D,2KAA2K,eAAe,mNAAmN,yCAAyC,8c;;;;;;;;;;;;;;;;;;;;ACAjX;AACnB;AACe;AACf;AAOlD;IAIE,8BAAoB,eAA+B,EAAU,aAA2B,EAAU,OAAe;QAAjH,iBAQC;QARmB,oBAAe,GAAf,eAAe,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAc;QAAU,YAAO,GAAP,OAAO,CAAQ;QAFjH,aAAQ,GAAG,IAAI,uDAAI,CAAC,EAAE,CAAC,CAAC;QACxB,iBAAY,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAc;YACnD,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACvB,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,QAAc;gBAC/D,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAC3B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAQ,GAAR;IACA,CAAC;IAED,yCAAU,GAAV;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAE;YACpD,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IArBU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,uJAA4C;;SAE7C,CAAC;+EAKqC,8DAAc,EAAyB,0EAAY,EAAmB,sDAAM;OAJtG,oBAAoB,CAuBhC;IAAD,2BAAC;CAAA;AAvBgC;;;;;;;;;;;;ACVjC,yBAAyB,kBAAkB,KAAK,mDAAmD,+V;;;;;;;;;;;ACAnG,snBAAsnB,uBAAuB,+DAA+D,uBAAuB,8DAA8D,+DAA+D,uIAAuI,uBAAuB,kLAAkL,uBAAuB,wsBAAwsB,2BAA2B,qC;;;;;;;;;;;;;;;;;;;;;ACAx3D;AACgB;AACY;AAC/B;AAC6C;AAO5F;IAOE,wBAAoB,YAA0B,EAAU,gBAAiC;QAAzF,iBAUC;QAVmB,iBAAY,GAAZ,YAAY,CAAc;QAAU,qBAAgB,GAAhB,gBAAgB,CAAiB;QANzF,qBAAgB,GAAa,EAAE,CAAC;QAEhC,eAAU,GAAU,EAAE,CAAC;QACvB,aAAQ,GAAG,KAAK,CAAC;QACjB,UAAK,GAAG,EAAE,CAAC;QAGT,IAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,KAA8B;YACnG,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBACpB,KAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;gBACtC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;iBAAM;gBACL,KAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;aACpD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,kDAAyB,GAAjC,UAAkC,KAA8B;QAAhE,iBAgCC;;QA/BC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACnC,KAAK,CAAC,OAAO,CAAC,iBAAO;YACnB,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QACH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,eAAe,UAAC;YACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,aAAa,UAAC;gBAClB,IAAI,CAAC,KAAK,CAAC,EAAE;oBACX,aAAa;4BACX,IAAI,EAAE;gCACJ,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,SAAS;6BACxD;;wBACD,GAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAG,KAAK,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC;2BACzD,CAAC;iBACH;qBAAM;oBACL,aAAa;wBACX,GAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAG,KAAK,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC;2BACzD,CAAC;iBACH;gBAED,eAAe,GAAG,mDAAK,eAAe,EAAK,aAAa,CAAE,CAAC;aAC5D;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACvC;QACD,KAAK,CAAC,IAAI,CAAC,IAAI,sFAAqB,CAAC;YACnC,IAAI,EAAE,IAAI,uDAAI,CAAC;gBACb,IAAI,EAAE,MAAM;aACb,CAAC;SACH,CAAC,CAAC,CAAC;IACN,CAAC;IAED,iCAAQ,GAAR;IACA,CAAC;IAtDU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,4HAAqC;;SAEtC,CAAC;+EAQkC,0EAAY,EAA4B,yGAAe;OAP9E,cAAc,CAwD1B;IAAD,qBAAC;CAAA;AAxD0B;;;;;;;;;;;;ACX3B,+DAA+D,2N;;;;;;;;;;;ACA/D,q3CAAq3C,wEAAwE,KAAK,gDAAgD,kBAAkB,KAAK,oBAAoB,wBAAwB,kBAAkB,muB;;;;;;;;;;;;;;;;;;;;;ACArhD;AACkB;AAC3B;AACgD;AACR;AAOjF;IAQE,kCAAoB,YAAyB,EAAU,iBAAmC,EAC9E,eAA+B,EAAU,OAAe;QADpE,iBAOC;QAPmB,iBAAY,GAAZ,YAAY,CAAa;QAAU,sBAAiB,GAAjB,iBAAiB,CAAkB;QAC9E,oBAAe,GAAf,eAAe,CAAgB;QAAU,YAAO,GAAP,OAAO,CAAQ;QANpE,aAAQ,GAAG,GAAG,CAAC;QAEf,qBAAgB,GAAG,KAAK,CAAC;QAMvB,IAAI,CAAC,eAAe,CAAC,sBAAsB,EAAE,CAAC,SAAS,CAAC,UAAC,QAAe;YACtE,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC1C,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC3C,CAAC,CAAC;IACL,CAAC;IAED,yCAAM,GAAN;QAAA,iBAYC;QARG,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,EAAE;YACzB,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,CAAC;iBACnF,SAAS,CAAC,kBAAQ,IAAI,YAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,EAAvC,CAAuC,CAAC,CAAC;SACjE;QACD,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,EAAE;YACzB,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC;iBACnG,SAAS,CAAC,kBAAQ,IAAI,YAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,EAAvC,CAAuC,CAAC,CAAC;SACjE;IACL,CAAC;IAGD,iDAAc,GAAd;QACE,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,EAAE;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,IAAI,IAAI,CAAC,SAAS,EAAE;YAC3C,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IA/CU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,4KAAiD;;SAElD,CAAC;+EASkC,0DAAW,EAA6B,8FAAgB;YAC7D,8FAAc,EAAmB,sDAAM;OATzD,wBAAwB,CAgDpC;IAAD,+BAAC;CAAA;AAhDoC;;;;;;;;;;;;ACXrC,+DAA+D,+M;;;;;;;;;;;ACA/D,wkC;;;;;;;;;;;;;;;;;;;;ACAqE;AACnB;AACkB;AAC3B;AAOzC;IAGE,8BAAoB,YAAyB,EAAU,aAA2B,EAAU,OAAe;QAAvF,iBAAY,GAAZ,YAAY,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAc;QAAU,YAAO,GAAP,OAAO,CAAQ;IAAI,CAAC;IAEhH,uCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC3C,gBAAgB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC5C,CAAC,CAAC;IACL,CAAC;IAED,qCAAM,GAAN;QAAA,iBAGC;QAFC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,gBAAgB,CAAC;aACtE,SAAS,CAAC,kBAAQ,IAAI,YAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,EAAvC,CAAuC,CAAC,CAAC;IACpE,CAAC;IAdU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,6JAA4C;;SAE7C,CAAC;+EAIkC,0DAAW,EAAyB,0EAAY,EAAmB,sDAAM;OAHhG,oBAAoB,CAgBhC;IAAD,2BAAC;CAAA;AAhBgC;;;;;;;;;;;;ACVjC,+DAA+D,+N;;;;;;;;;;;ACA/D,kLAAkL,gBAAgB,mOAAmO,0CAA0C,0Z;;;;;;;;;;;;;;;;;;;;ACA5Y;AACjB;AACe;AACwB;AAOzF;IAIE,mCAAoB,eAA+B,EACzC,iBAAmC,EACnC,OAAe,EACf,YAAyB;QAHnC,iBAYC;QAZmB,oBAAe,GAAf,eAAe,CAAgB;QACzC,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QANnC,iBAAY,GAAG,KAAK,CAAC;QAOnB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAc;YACnD,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACvB,KAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,SAAc;gBACpE,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;gBACrC,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC3B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAC3B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAQ,GAAR;IACA,CAAC;IAED,8CAAU,GAAV;QAAA,iBAIC;QAHC,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;YACxD,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4DAAwB,GAAxB;QACE,IAAI,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,KAAK,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,EAAE;YAClF,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAjCU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,+KAAkD;;SAEnD,CAAC;+EAKqC,8DAAc;YACtB,8FAAgB;YAC1B,sDAAM;YACD,gFAAW;OAPxB,yBAAyB,CAmCrC;IAAD,gCAAC;CAAA;AAnCqC;;;;;;;;;;;;ACVtC,yBAAyB,kBAAkB,KAAK,mDAAmD,+X;;;;;;;;;;;ACAnG,8nDAA8nD,mBAAmB,6aAA6a,wBAAwB,wSAAwS,2BAA2B,8W;;;;;;;;;;;;;;;;;;;;ACAxzE;AAC/B;AAChB;AAC8D;AAOhH;IAME,6BAAoB,aAA2B,EACrC,oBAAyC,EACzC,yBAAmD;QAFzC,kBAAa,GAAb,aAAa,CAAc;QACrC,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,8BAAyB,GAAzB,yBAAyB,CAA0B;QAP7D,kBAAa,GAAG,KAAK,CAAC;QAItB,qBAAgB,GAAa,CAAC,aAAa,EAAE,MAAM,EAAE,oBAAoB,CAAC,CAAC;QAIzE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEO,0CAAY,GAApB;QAAA,iBAQC;QAPC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAC,WAAgB;YAC3D,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE;gBAC1B,KAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,8CAAgB,GAAxB;QAAA,iBAMC;QALC,IAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,IAAI,CAAC,yBAAyB,CAAC,gCAAgC,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,UAAC,QAAa;YACnG,KAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAI,CAAC,mBAAmB,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAQ,GAAR;IACA,CAAC;IAED,yCAAW,GAAX;QACE,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAC,QAAa;YACvD,QAAQ,CAAC,MAAM,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAU,GAAV;QACE,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,QAAa;YAC7D,QAAQ,CAAC,MAAM,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IA3CU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,8IAA2C;;SAE5C,CAAC;+EAOmC,0EAAY;YACf,uGAAmB;YACd,wHAAwB;OARlD,mBAAmB,CA6C/B;IAAD,0BAAC;CAAA;AA7C+B;;;;;;;;;;;;ACVhC,+DAA+D,2O;;;;;;;;;;;ACA/D,uLAAuL,2BAA2B,qQ;;;;;;;;;;;;;;;;;;ACAhK;AAC4D;AAO9G;IAIE,kCAAoB,uBAA+C;QAAnE,iBAMC;QANmB,4BAAuB,GAAvB,uBAAuB,CAAwB;QAHnE,wBAAmB,GAAG,KAAK,CAAC;QAI1B,IAAI,CAAC,uBAAuB,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,UAAC,WAAgB;YAChF,KAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC;YACrC,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,iBAAiB,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAQ,GAAR;IACA,CAAC;IAED,mDAAgB,GAAhB,UAAiB,cAAsB;QACrC,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,UAAC,QAAa;YACpF,QAAQ,CAAC,MAAM,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mDAAgB,GAAhB,UAAiB,UAAe;QAAhC,iBAWC;QAVC,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAU,CAAC,CAAC;QAC7C,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,QAAa;YACnF,IAAM,OAAO,GAAG,EAAE,CAAC;YACnB,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,2BAAiB;gBAC9C,IAAI,iBAAiB,CAAC,EAAE,KAAK,UAAU,CAAC,EAAE,EAAE;oBAC1C,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;iBACjC;YACH,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAhCU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,uLAAgD;;SAEjD,CAAC;+EAK6C,gHAAsB;OAJxD,wBAAwB,CAkCpC;IAAD,+BAAC;CAAA;AAlCoC;;;;;;;;;;;;ACRrC,+DAA+D,+N;;;;;;;;;;;ACA/D,kpBAAkpB,kBAAkB,KAAK,iBAAiB,qM;;;;;;;;;;;;;;;;;;;;ACA1kB;AACT;AACrD;AACkB;AAOpE;IAKE,6BAAoB,YAAyB,EACnC,oBAAyC,EACzC,uBAA+C;QAFzD,iBAQC;QARmB,iBAAY,GAAZ,YAAY,CAAa;QACnC,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,4BAAuB,GAAvB,uBAAuB,CAAwB;QALzD,oBAAe,GAAG,KAAK,CAAC;QAMtB,IAAI,CAAC,oBAAoB,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,UAAC,OAAY;YACjE,KAAI,CAAC,aAAa,GAAG,OAAO,CAAC;YAC7B,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC3C,qBAAqB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,KAAK,CAAC;SAC9C,CAAC,CAAC;IACL,CAAC;IAED,+CAAiB,GAAjB,UAAkB,MAAW;QAA7B,iBAUC;QATC,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;YAC9E,IAAM,OAAO,GAAG,EAAE,CAAC;YACnB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,uBAAa;gBACtC,IAAI,aAAa,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,EAAE;oBAC9C,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;iBAC7B;YACH,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,aAAa,GAAG,OAAO,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,qBAAqB,CAAC;aAC7F,SAAS,CAAC,kBAAQ,IAAI,cAAO,CAAC,GAAG,CAAC,UAAU,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACpD,CAAC;IApCU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,wKAA2C;;SAE5C,CAAC;+EAMkC,0DAAW;YACb,uGAAmB;YAChB,gHAAsB;OAP9C,mBAAmB,CAwC/B;IAAD,0BAAC;CAAA;AAxC+B;;;;;;;;;;;;ACVhC,+DAA+D,2M;;;;;;;;;;;ACA/D,ogB;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;IALU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,0JAA2C;;SAE5C,CAAC;;OACW,oBAAoB,CAOhC;IAAD,2BAAC;CAAA;AAPgC;;;;;;;;;;;;ACPjC,yBAAyB,kBAAkB,KAAK,gBAAgB,uBAAuB,KAAK,mDAAmD,2d;;;;;;;;;;;ACA/I,4WAA4W,mBAAmB,msBAAmsB,2BAA2B,ycAAyc,mBAAmB,2tBAA2tB,2BAA2B,4D;;;;;;;;;;;;;;;;;;;;ACA7rE;AACnB;AAC3B;AAClB;AASlD;IAME,6BAAoB,aAA2B,EACrC,oBAAyC,EACzC,yBAAmD;QAFzC,kBAAa,GAAb,aAAa,CAAc;QACrC,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,8BAAyB,GAAzB,yBAAyB,CAA0B;QAP7D,uBAAkB,GAAG,KAAK,CAAC;QAC3B,kBAAa,GAAG,KAAK,CAAC;QACtB,qBAAgB,GAAa,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;QACtD,gBAAW,GAA4B,EAAE,CAAC;QAKxC,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAEO,kDAAoB,GAA5B;QACE,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAEO,8CAAgB,GAAxB;QAAA,iBAMC;QALC,IAAI,CAAC,aAAa,CAAC,4BAA4B,EAAE,CAAC,SAAS,CAAC,UAAC,gBAAuB;YAClF,KAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;YACjD,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,mDAAqB,GAA7B;QAAA,iBAMC;QALC,IAAI,CAAC,yBAAyB,CAAC,8BAA8B,EAAE,CAAC,SAAS,CAAC,UAAC,gBAAqB;YAC9F,KAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;YACzC,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC;YACzD,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAQ,GAAR;IACA,CAAC;IAED,qDAAuB,GAAvB,UAAwB,YAAiB;QACvC,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,UAAC,MAAe;YACpF,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sDAAwB,GAAxB,UAAyB,iBAAsB;QAC7C,IAAI,CAAC,yBAAyB,CAAC,4BAA4B,CAAC,iBAAiB,CAAC;aAC3E,SAAS,CAAC,UAAC,QAAa;YACvB,iBAAiB,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC7C,CAAC,CAAC,CAAC;IACP,CAAC;IA/CU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,8IAA2C;;SAE5C,CAAC;+EAOmC,0EAAY;YACf,uGAAmB;YACd,wHAAwB;OARlD,mBAAmB,CAiD/B;IAAD,0BAAC;CAAA;AAjD+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZqF;AACH;AACd;AACF;AACb;AACM;AAClD;AACc;AACa;AACiB;AACS;AACxB;AACyC;AAG/G,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gFAAc,EAAE,WAAW,EAAE,CAAC,oFAAa,CAAC,EAAC;IACpE,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,uGAAmB,EAAE,WAAW,EAAE,CAAC,oFAAa,CAAC,EAAC;IACnF,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,8HAAwB,EAAE,WAAW,EAAE,CAAC,oFAAa,CAAC,EAAC;IAC7F,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,gHAAoB,EAAE,WAAW,EAAE,CAAC,oFAAa,CAAC,EAAC;IACrF,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,iGAAmB,EAAE,WAAW,EAAE,CAAC,oFAAa,CAAC,EAAC;IAC9E,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,4HAAmB,EAAE,WAAW,EAAE,CAAC,oFAAa,CAAC,EAAC;IACnF,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,8GAAoB,EAAE,WAAW,EAAE,CAAC,oFAAa,CAAC,EAAC;IAC1F,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,kGAAmB,EAAE,WAAW,EAAE,CAAC,oFAAa,CAAC,EAAC;IAC9E,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,2GAAoB,EAAE,WAAW,EAAE,CAAC,oFAAa,CAAC,EAAC;IAC7E,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iIAAyB,EAAE,WAAW,EAAE,CAAC,oFAAa,CAAC,EAAC;CACzF,CAAC;AAMF;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAJ9B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCmF;AACY;AAC1B;AACF;AACJ;AACT;AAC5C;AACmB;AACQ;AACuB;AACJ;AACF;AACnB;AACnB;AACgE;AACM;AAuBrH;IAAA;IAA2B,CAAC;IAAf,WAAW;QAtBvB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,wEAAkB;gBAClB,gGAAc;gBACd,mEAAmB;gBACnB,2DAAW;gBACX,6DAAY;aACb;YACD,YAAY,EAAE;gBACZ,gFAAc;gBACd,wGAAmB;gBACnB,iGAAmB;gBACnB,kGAAmB;gBACnB,0GAAoB;gBACpB,4HAAmB;gBACnB,8GAAoB;gBACpB,gHAAoB;gBACpB,0IAAwB;gBACxB,kIAAyB;gBACzB,8HAAwB;aACzB;SACF,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACtCxB;AAAA;AAAA;IAME,sBAAY,YAAmC;QAC7C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IACpC,CAAC;IAEH,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACPD;AAAA;AAAA;IAIE,+BAAY,qBAAqD;QAFjE,2BAAsB,GAAmB,EAAE,CAAC;QAG1C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;IAC9C,CAAC;IACF,4BAAC;AAAD,CAAC;;;;;;;;;;;;;;ACVD;AAAA;AAAA;IAKE,cAAY,IAAmB;QAC7B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5B,CAAC;IACH,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;ACR0C;AACoB;AACI;AAG9B;AAKrC;IAEE,6BAAoB,KAAiB,EAAU,YAAyB;QAApD,UAAK,GAAL,KAAK,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAa;IAAI,CAAC;IAE7E,iDAAmB,GAAnB,UAAoB,YAA0B;QAC5C,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;YAC1B,EAAE,EAAE,YAAY,CAAC,EAAE;YACnB,MAAM,EAAE,CAAC,YAAY,CAAC,MAAM;SAC7B,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAe,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,kBAAkB,EAAE,IAAI,EACxF,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,IAAI,CAC/C,0DAAG,CAAC,kBAAQ;YACV,OAAO,QAAQ,CAAC,MAAM,CAAC;QACzB,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAfU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG2B,+DAAU,EAAwB,gFAAW;OAF7D,mBAAmB,CAgB/B;IAAD,0BAAC;CAAA;AAhB+B;;;;;;;;;;;;;;;;;;;;;;;;ACVkC;AACC;AACxB;AACoB;AAE1B;AACyC;AAC/B;AAI/C;IAEE,sBAAoB,KAAiB,EAAU,YAAyB;QAApD,UAAK,GAAL,KAAK,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAa;IAAI,CAAC;IAE7E,qCAAc,GAAd,UAAe,EAAU;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,YAAY,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACvH,CAAC;IAED,qCAAc,GAAd,UAAe,QAAa,EAAE,IAAY,EAAE,OAAsB;QAAtB,wCAAsB;QAChE,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;YAC1B,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,OAAO;SACnB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,kBAAkB,EAAE,IAAI,EACzE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QAC/C,SAAS;QACT,6BAA6B;QAC7B,qCAAqC;QACrC,SAAS;IACX,CAAC;IAED,kCAAW,GAAX,UAAY,EAAU;QAAtB,iBAMC;QALC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAS,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,YAAY,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,IAAI,CAC5H,0DAAG,CAAC,cAAI;YACN,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,mDAA4B,GAA5B;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAA0B,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,yBAAyB,EAClG,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QAC/C,SAAS;QACT,qCAAqC;QACrC,0DAA0D;QAC1D,SAAS;IACX,CAAC;IAED,+CAAwB,GAAxB,UAAyB,IAAU,EAAE,KAAkB;QAAvD,iBAWC;QAXoC,kCAAkB;QACrD,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;YAC1B,cAAc,EAAE,IAAI,CAAC,MAAM,EAAE;YAC7B,QAAQ,EAAE,KAAK;SAChB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAA0B,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,2BAA2B,EACrG,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC;aACjD,IAAI,CACH,0DAAG,CAAC,UAAC,iBAAsB;YACzB,OAAO,KAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC,CAAC;IACV,CAAC;IAEO,8BAAO,GAAf,UAAgB,IAAS;QACvB,IAAI,IAAI,EAAE;YACR,OAAO,IAAI,uDAAI,CAAC;gBACd,EAAE,EAAE,IAAI,CAAC,EAAE;gBACX,SAAS,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;gBACnC,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC,CAAC;SACJ;IACH,CAAC;IAEO,2CAAoB,GAA5B,UAA6B,iBAAsB;QACjD,IAAM,aAAa,GAA4B,EAAE,CAAC;QAClD,iBAAiB,CAAC,OAAO,CAAC,cAAI;YAC5B,IAAM,kBAAkB,GAAG,EAAE,CAAC;YAC9B,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,sBAAY;gBAC9C,kBAAkB,CAAC,IAAI,CAAC,IAAI,wEAAY,CAAC;oBACvC,SAAS,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;oBAC3C,EAAE,EAAE,YAAY,CAAC,EAAE;oBACnB,MAAM,EAAE,YAAY,CAAC,MAAM;oBAC3B,OAAO,EAAE,YAAY,CAAC,OAAO;iBAC9B,CAAC,CAAC,CAAC;YACN,CAAC,CAAC,CAAC;YACH,aAAa,CAAC,IAAI,CAAC,IAAI,sFAAqB,CAAC;gBAC3C,IAAI,EAAE,IAAI,uDAAI,CAAC;oBACb,EAAE,EAAE,IAAI,CAAC,EAAE;oBACX,SAAS,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;oBACnC,IAAI,EAAE,IAAI,CAAC,IAAI;iBAChB,CAAC;gBACF,sBAAsB,EAAE,kBAAkB;aAC3C,CAAC,CACD,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,OAAO,aAAa,CAAC;IACvB,CAAC;IArFU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG2B,+DAAU,EAAwB,gFAAW;OAF7D,YAAY,CAsFxB;IAAD,mBAAC;CAAA;AAtFwB;;;;;;;;;;;;;;;;;;;;ACXkB;AACO;AACiB;AAMnE;IAEE,kCAAoB,KAAiB,EAAU,YAAyB;QAApD,UAAK,GAAL,KAAK,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAa;IAAI,CAAC;IAE7E,iEAA8B,GAA9B;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,uBAAuB,EACvE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,mEAAgC,GAAhC,UAAiC,IAAU;QACzC,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;YAC1B,iBAAiB,EAAE,IAAI;SACxB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,uBAAuB,EAAE,IAAI,EAC9E,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,+DAA4B,GAA5B,UAA6B,YAAiB;QAC5C,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;YAC1B,EAAE,EAAE,YAAY,CAAC,EAAE;YACnB,MAAM,EAAE,CAAC,YAAY,CAAC,MAAM;SAC7B,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,uBAAuB,EAAE,IAAI,EAC/E,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;IAxBU,wBAAwB;QAHpC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG2B,+DAAU,EAAwB,gFAAW;OAF7D,wBAAwB,CA0BpC;IAAD,+BAAC;CAAA;AA1BoC;;;;;;;;;;;;;;;;;;;;ACRM;AACO;AACiB;AAMnE;IAEE,0BAAoB,KAAiB,EAAU,YAAyB;QAApD,UAAK,GAAL,KAAK,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAa;IAAI,CAAC;IAE7E,0CAAe,GAAf,UAAgB,EAAU;QACxB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,iBAAiB,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IAC5H,CAAC;IAED,0CAAe,GAAf,UAAgB,QAAa,EAAE,IAAY,EAAE,OAAsB;QAAtB,wCAAsB;QACjE,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;YAC1B,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,OAAO;SACnB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,gBAAgB,EAAE,IAAI,EACvE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,uCAAY,GAAZ,UAAa,EAAU;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,iBAAiB,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACzH,CAAC;IApBU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG2B,+DAAU,EAAwB,gFAAW;OAF7D,gBAAgB,CAsB5B;IAAD,uBAAC;CAAA;AAtB4B;;;;;;;;;;;;;;;;;;;;ACRc;AACO;AACiB;AAMnE;IAEE,gCAAoB,KAAiB,EAAU,YAAyB;QAApD,UAAK,GAAL,KAAK,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAa;IAAI,CAAC;IAE7E,wDAAuB,GAAvB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,gBAAgB,EAChE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,oDAAmB,GAAnB,UAAoB,WAAmB;QACrC,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;YAC1B,cAAc,EAAE,WAAW;SAC5B,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,gBAAgB,EAAE,IAAI,EACvE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,iDAAgB,GAAhB,UAAiB,EAAU;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,iBAAiB,GAAG,EAAE,EACzE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,iDAAgB,GAAhB,UAAiB,cAAsB;QACrC,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;YAC1B,cAAc,EAAE,cAAc;SAC/B,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,uBAAuB,EAAE,IAAI,EAC9E,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;IA5BU,sBAAsB;QAHlC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG2B,+DAAU,EAAwB,gFAAW;OAF7D,sBAAsB,CA6BlC;IAAD,6BAAC;CAAA;AA7BkC;;;;;;;;;;;;;;;;;;;;ACRQ;AACO;AACiB;AAMnE;IAEE,6BAAoB,KAAiB,EAAU,YAAyB;QAApD,UAAK,GAAL,KAAK,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAa;IAAI,CAAC;IAE7E,6CAAe,GAAf;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,kBAAkB,EAClE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,+CAAiB,GAAjB,UAAkB,QAAgB;QAChC,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;YAC1B,cAAc,EAAE,QAAQ;SACzB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,2BAA2B,EAAE,IAAI,EAClF,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,wCAAU,GAAV;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,kBAAkB,EACrE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;IApBU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG2B,+DAAU,EAAwB,gFAAW;OAF7D,mBAAmB,CAsB/B;IAAD,0BAAC;CAAA;AAtB+B;;;;;;;;;;;;;;;;;;;;ACRW;AAEO;AACiB;AAKnE;IAEE,sBAAoB,KAAiB,EAAU,YAAyB;QAApD,UAAK,GAAL,KAAK,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAa;IAAI,CAAC;IAE7E,mCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,WAAW,EAC3D,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,kCAAW,GAAX,UAAY,IAAY;QACtB,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;YAC1B,SAAS,EAAE,IAAI;SAChB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,WAAW,EAAE,IAAI,EAClE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,kCAAW,GAAX;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,WAAW,EAC9D,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;IApBU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG2B,+DAAU,EAAwB,gFAAW;OAF7D,YAAY,CAsBxB;IAAD,mBAAC;CAAA;AAtBwB","file":"modules-goals-goals-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZ29hbHMvY29tcG9uZW50cy9nb2Fscy9jcmVhdGUtZ29hbC9jcmVhdGUtZ29hbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/goals']\\\">Siekiai</button>\\r\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/goals/group']\\\">Grupės siekiai</button>\\r\\n  <br>\\r\\n  <mat-vertical-stepper *ngIf=\\\"isWorkoutsLoaded\\\" [linear]=\\\"true\\\" #stepper>\\r\\n    <mat-step [stepControl]=\\\"goalNameForm\\\">\\r\\n      <form [formGroup]=\\\"goalNameForm\\\">\\r\\n        <ng-template matStepLabel>Siekio pavadinimas</ng-template>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Siekio pavadinimas\\\" formControlName=\\\"goalNameControl\\\" required>\\r\\n        </mat-form-field>\\r\\n        <div>\\r\\n          <button mat-raised-button color=\\\"primary\\\" matStepperNext>sekantis žingsnis</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-step>\\r\\n\\r\\n\\r\\n    <mat-step>\\r\\n      <ng-template matStepLabel>Siekio tipas</ng-template>\\r\\n      <mat-radio-group aria-label=\\\"Pasirinkite tipą\\\" [(ngModel)]=\\\"goalType\\\">\\r\\n        <mat-radio-button value=\\\"1\\\">Standartinis</mat-radio-button>\\r\\n        <mat-radio-button [disabled]=\\\"workouts.length==0\\\" value=\\\"2\\\">Treniruotės</mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n      <ng-container *ngIf=\\\"goalType=='2'\\\">\\r\\n        <mat-radio-group aria-label=\\\"Pasirinkite treniruotę\\\" [(ngModel)]=\\\"workoutId\\\">\\r\\n          <ng-container *ngFor=\\\"let workoutObject of workouts; let i=index\\\">\\r\\n            <mat-card>\\r\\n              Treniruotė {{i+1}} -\\r\\n              <mat-radio-button value=\\\"{{workoutObject.id}}\\\">{{workoutObject.name}} -\\r\\n                {{workoutObject.id}}\\r\\n              </mat-radio-button>\\r\\n            </mat-card>\\r\\n          </ng-container>\\r\\n        </mat-radio-group>\\r\\n      </ng-container>\\r\\n\\r\\n      <div>\\r\\n        <button mat-raised-button [disabled]=\\\"isTypeDisabled()\\\" color=\\\"primary\\\" matStepperNext>sekantis\\r\\n          žingsnis</button>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n\\r\\n\\r\\n    <mat-step>\\r\\n      <ng-template matStepLabel>Siekio sukūrimas</ng-template>\\r\\n\\r\\n      <div>\\r\\n        <button mat-raised-button color=\\\"primary\\\" matStepperPrevious>Praeitas žingsnis</button>\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submit()\\\">Kurti</button>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n  </mat-vertical-stepper>\\r\\n\\r\\n</div>\\r\\n\"","import { GoalsService } from '../../../services/goals/goals.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { WorkoutService } from 'src/app/shared/services/workout/workout.service';\r\n\r\n@Component({\r\n  selector: 'app-create-goal',\r\n  templateUrl: './create-goal.component.html',\r\n  styleUrls: ['./create-goal.component.css']\r\n})\r\nexport class CreateGoalComponent implements OnInit {\r\n  goalType = '0';\r\n  workoutId: any;\r\n  isWorkoutsLoaded = false;\r\n  // goalTypeForm: FormGroup;\r\n  workouts: any[];\r\n\r\n  goalNameForm: FormGroup;\r\n\r\n  typeNotValid = true;\r\n  constructor(private _formBuilder: FormBuilder, private _goalsService: GoalsService,\r\n    private _router: Router, private _workoutService: WorkoutService) {\r\n    this._workoutService.getUserUnusedWorkouts().subscribe((workouts: any[]) => {\r\n      this.workouts = workouts;\r\n      this.isWorkoutsLoaded = true;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.goalNameForm = this._formBuilder.group({\r\n      goalNameControl: ['', Validators.required]\r\n    });\r\n\r\n    // this.goalTypeForm = this._formBuilder.group({\r\n    //   goalTypeControl: [this.goalType, Validators.required]\r\n    // });\r\n  }\r\n\r\n  // temp(stuff) {\r\n  //   console.log('stuff', stuff);\r\n  // }\r\n\r\n  isTypeDisabled() {\r\n    if (this.goalType === '1') {\r\n      this.workoutId = null;\r\n      return false;\r\n    }\r\n    if (this.goalType === '2' && this.workoutId) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  submit(): void {\r\n    if (this.goalType === '1') {\r\n      this._goalsService.createUserGoal('1', this.goalNameForm.value.goalNameControl)\r\n        .subscribe(anything => this._router.navigate(['/goals']));\r\n    }\r\n    if (this.goalType === '2') {\r\n      this._goalsService.createUserGoal('2', this.goalNameForm.value.goalNameControl, this.workoutId)\r\n        .subscribe(anything => this._router.navigate(['/goals']));\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZ29hbHMvY29tcG9uZW50cy9nb2Fscy9nb2FsLWRldGFpbHMvZ29hbC1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"isGoalLoaded && userGoal\\\" class=\\\"container\\\">\\r\\n  <mat-card class=\\\"example-card\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card-title> {{userGoal.name}}\\r\\n      </mat-card-title>\\r\\n      <mat-card-subtitle>Siekio tipas</mat-card-subtitle>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <p>\\r\\n        Siekio aprašymas\\r\\n        <br>\\r\\n        {{userGoal.createdAt | date: 'yyyy-MM-dd'}}\\r\\n        <br>\\r\\n        <button mat-raised-button color=\\\"warn\\\" (click)=\\\"removeGoal()\\\">Pašalinti siekį</button>\\r\\n      </p>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/goals']\\\">Visi siekiai</button>\\r\\n      <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/goals/today']\\\">Šiandienos siekiai</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","import { GoalsService } from '../../../services/goals/goals.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Params, ActivatedRoute, Router } from '@angular/router';\r\nimport { Goal } from '../../../models/goal.model';\r\n\r\n@Component({\r\n  selector: 'app-goal-details',\r\n  templateUrl: './goal-details.component.html',\r\n  styleUrls: ['./goal-details.component.css']\r\n})\r\nexport class GoalDetailsComponent implements OnInit {\r\n  id: string;\r\n  userGoal = new Goal({});\r\n  isGoalLoaded = false;\r\n  constructor(private _activatedRoute: ActivatedRoute, private _goalsService: GoalsService, private _router: Router) {\r\n    this._activatedRoute.params.subscribe((params: Params) => {\r\n      this.id = params['id'];\r\n      this._goalsService.getUserGoal(this.id).subscribe((userGoal: Goal) => {\r\n        this.userGoal = userGoal;\r\n        this.isGoalLoaded = true;\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  removeGoal(): void {\r\n    this._goalsService.deleteUserGoal(this.id).subscribe( () => {\r\n      this._router.navigate(['/goals']);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9nb2Fscy9jb21wb25lbnRzL2dvYWxzL2dvYWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2dvYWxzL2NvbXBvbmVudHMvZ29hbHMvZ29hbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-10\\\">\\r\\n      <h5>Mano siekiai</h5>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/goals/creategoal']\\\">create</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isLoaded\\\" class=\\\"container\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <ng-container *ngFor=\\\"let goalElement of goals\\\">\\r\\n      <!-- HEADER -->\\r\\n      <ng-container *ngIf=\\\"goalElement.goal.name=='Data'\\\" matColumnDef=\\\"{{goalElement.goal.name}}\\\" sticky>\\r\\n        <th mat-header-cell *matHeaderCellDef> {{goalElement.goal.name}} </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element[goalElement.goal.name].createdAt | date: 'yyyy-MM-dd'}} </td>\\r\\n      </ng-container>\\r\\n      <!-- ROWS -->\\r\\n      <ng-container *ngIf=\\\"goalElement.goal.name!='Data'\\\" matColumnDef=\\\"{{goalElement.goal.name}}\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>\\r\\n          <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/goals', goalElement.goal.id]\\\">\\r\\n            {{goalElement.goal.name}} <mat-icon>create</mat-icon>\\r\\n          </button>\\r\\n        </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <!-- REAL DATA -->\\r\\n          <ng-container *ngIf=\\\"!element[goalElement.goal.name].isDummy\\\">\\r\\n            <mat-checkbox [(ngModel)]=\\\"element[goalElement.goal.name].isDone\\\" [disabled]=true></mat-checkbox>\\r\\n          </ng-container>\\r\\n          <!-- DUMMY DATA -->\\r\\n          <ng-container *ngIf=\\\"element[goalElement.goal.name].isDummy\\\">\\r\\n            --\\r\\n          </ng-container>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { GoalsService } from '../../services/goals/goals.service';\r\nimport { GoalWithProgressModel } from '../../models/goal-with-progress.model';\r\nimport { Goal } from '../../models/goal.model';\r\nimport { SnackbarService } from 'src/app/shared/services/message-snackbar/snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-goals',\r\n  templateUrl: './goals.component.html',\r\n  styleUrls: ['./goals.component.css']\r\n})\r\nexport class GoalsComponent implements OnInit {\r\n  displayedColumns: string[] = [];\r\n  goals: GoalWithProgressModel[];\r\n  dataSource: any[] = [];\r\n  isLoaded = false;\r\n  limit = 10;\r\n\r\n  constructor(private _goalService: GoalsService, private _snackbarService: SnackbarService) {\r\n    const currentDate = new Date();\r\n    this._goalService.GetUserGoalsWithProgress(currentDate, 10).subscribe((goals: GoalWithProgressModel[]) => {\r\n      if (goals.length > 0) {\r\n        this.mapGoalsToTableDataSource(goals);\r\n        this.isLoaded = true;\r\n      } else {\r\n        this._snackbarService.openSnackBar('Nėra siekių.');\r\n      }\r\n    });\r\n  }\r\n\r\n  private mapGoalsToTableDataSource(goals: GoalWithProgressModel[]): void {\r\n    this.goals = goals;\r\n    this.displayedColumns.push('Data');\r\n    goals.forEach(element => {\r\n      this.displayedColumns.push(element.goal.name);\r\n    });\r\n    for (let i = 0; i < this.limit; i++) {\r\n      let tableGoalObject;\r\n      for (let k = 0; k < goals.length; k++) {\r\n        let objectToMerge;\r\n        if (k === 0) {\r\n          objectToMerge = {\r\n            Data: {\r\n              createdAt: goals[k].goalProgressCollection[i].createdAt\r\n            },\r\n            [goals[k].goal.name]: goals[k].goalProgressCollection[i]\r\n          };\r\n        } else {\r\n          objectToMerge = {\r\n            [goals[k].goal.name]: goals[k].goalProgressCollection[i]\r\n          };\r\n        }\r\n\r\n        tableGoalObject = { ...tableGoalObject, ...objectToMerge };\r\n      }\r\n      this.dataSource.push(tableGoalObject);\r\n    }\r\n    goals.push(new GoalWithProgressModel({\r\n      goal: new Goal({\r\n        name: 'Data'\r\n      })\r\n    }));\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZ29hbHMvY29tcG9uZW50cy9ncm91cC1nb2Fscy9jcmVhdGUtZ3JvdXAtZ29hbC9jcmVhdGUtZ3JvdXAtZ29hbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/goals']\\\">Siekiai</button>\\r\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/goals/group']\\\">Grupės siekiai</button>\\r\\n  <br>\\r\\n  <mat-vertical-stepper [linear]=\\\"true\\\" #stepper>\\r\\n    <mat-step [stepControl]=\\\"goalNameForm\\\">\\r\\n      <form [formGroup]=\\\"goalNameForm\\\">\\r\\n        <ng-template matStepLabel>Siekio pavadinimas</ng-template>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Siekio pavadinimas\\\" formControlName=\\\"goalNameControl\\\" required>\\r\\n        </mat-form-field>\\r\\n        <div>\\r\\n          <button mat-raised-button color=\\\"primary\\\" matStepperNext>sekantis žingsnis</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-step>\\r\\n\\r\\n    <mat-step>\\r\\n      <ng-template matStepLabel>Siekio tipas</ng-template>\\r\\n      <mat-radio-group aria-label=\\\"Pasirinkite tipą\\\" [(ngModel)]=\\\"goalType\\\">\\r\\n        <mat-radio-button value=\\\"1\\\">Standartinis</mat-radio-button>\\r\\n        <mat-radio-button [disabled]=\\\"workouts.length==0\\\" value=\\\"2\\\">Treniruotės</mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n      <ng-container *ngIf=\\\"goalType=='2'\\\">\\r\\n        <mat-radio-group aria-label=\\\"Pasirinkite treniruotę\\\" [(ngModel)]=\\\"workoutId\\\">\\r\\n          <ng-container *ngFor=\\\"let workoutObject of workouts; let i=index\\\">\\r\\n            <mat-card>\\r\\n              Treniruotė {{i+1}} -\\r\\n              <mat-radio-button value=\\\"{{workoutObject.id}}\\\">{{workoutObject.name}} -\\r\\n                {{workoutObject.id}}\\r\\n              </mat-radio-button>\\r\\n            </mat-card>\\r\\n          </ng-container>\\r\\n        </mat-radio-group>\\r\\n      </ng-container>\\r\\n\\r\\n      <div>\\r\\n        <button mat-raised-button [disabled]=\\\"isTypeDisabled()\\\" color=\\\"primary\\\" matStepperNext>sekantis\\r\\n          žingsnis</button>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n\\r\\n\\r\\n\\r\\n    <mat-step>\\r\\n      <ng-template matStepLabel>Siekio pasikartojimas</ng-template>\\r\\n\\r\\n      <div>\\r\\n        <button mat-raised-button color=\\\"primary\\\" matStepperPrevious>Praeitas žingsnis</button>\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submit()\\\">Kurti</button>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n  </mat-vertical-stepper>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { GroupGoalService } from '../../../services/group/group-goal/group-goal.service';\r\nimport { WorkoutService } from 'src/app/shared/services/workout/workout.service';\r\n\r\n@Component({\r\n  selector: 'app-create-group-goal',\r\n  templateUrl: './create-group-goal.component.html',\r\n  styleUrls: ['./create-group-goal.component.css']\r\n})\r\nexport class CreateGroupGoalComponent implements OnInit {\r\n  goalNameForm: FormGroup;\r\n\r\n  goalType = '0';\r\n  workoutId: any;\r\n  isWorkoutsLoaded = false;\r\n  // goalTypeForm: FormGroup;\r\n  workouts: any[];\r\n  constructor(private _formBuilder: FormBuilder, private _groupGoalService: GroupGoalService\r\n    , private _workoutService: WorkoutService, private _router: Router) {\r\n\r\n    this._workoutService.getGroupUnusedWorkouts().subscribe((workouts: any[]) => {\r\n      this.workouts = workouts;\r\n      this.isWorkoutsLoaded = true;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.goalNameForm = this._formBuilder.group({\r\n      goalNameControl: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  submit(): void {\r\n\r\n\r\n\r\n      if (this.goalType === '1') {\r\n        this._groupGoalService.createGroupGoal('1', this.goalNameForm.value.goalNameControl)\r\n        .subscribe(anything => this._router.navigate(['/goals/group']));\r\n      }\r\n      if (this.goalType === '2') {\r\n        this._groupGoalService.createGroupGoal('2', this.goalNameForm.value.goalNameControl, this.workoutId)\r\n        .subscribe(anything => this._router.navigate(['/goals/group']));\r\n      }\r\n  }\r\n\r\n\r\n  isTypeDisabled() {\r\n    if (this.goalType === '1') {\r\n      this.workoutId = null;\r\n      return false;\r\n    }\r\n    if (this.goalType === '2' && this.workoutId) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZ29hbHMvY29tcG9uZW50cy9ncm91cC1nb2Fscy9jcmVhdGUtZ3JvdXAvY3JlYXRlLWdyb3VwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/goals/group']\\\">Grupės siekiai</button>\\r\\n  <br>\\r\\n  <mat-vertical-stepper [linear]=\\\"true\\\" #stepper>\\r\\n    <mat-step [stepControl]=\\\"groupNameForm\\\">\\r\\n      <form [formGroup]=\\\"groupNameForm\\\">\\r\\n        <ng-template matStepLabel>Grupės pavadinimas</ng-template>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"grupės pavadinimas\\\" formControlName=\\\"groupNameControl\\\" required>\\r\\n        </mat-form-field>\\r\\n        <div>\\r\\n          <button mat-raised-button color=\\\"primary\\\" matStepperNext>sekantis žingsnis</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-step>\\r\\n    <mat-step>\\r\\n      <ng-template matStepLabel>Kitas žingsnis</ng-template>\\r\\n\\r\\n      <div>\\r\\n        <button mat-raised-button color=\\\"primary\\\" matStepperPrevious >Praeitas žingsnis</button>\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submit()\\\">Kurti</button>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n  </mat-vertical-stepper>\\r\\n\\r\\n</div>\\r\\n\"","import { GroupService } from '../../../services/group/group.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-group',\r\n  templateUrl: './create-group.component.html',\r\n  styleUrls: ['./create-group.component.css']\r\n})\r\nexport class CreateGroupComponent implements OnInit {\r\n  groupNameForm: FormGroup;\r\n\r\n  constructor(private _formBuilder: FormBuilder, private _groupService: GroupService, private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.groupNameForm = this._formBuilder.group({\r\n      groupNameControl: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  submit(): void {\r\n    this._groupService.createGroup(this.groupNameForm.value.groupNameControl)\r\n      .subscribe(anything => this._router.navigate(['/goals/group']));\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZ29hbHMvY29tcG9uZW50cy9ncm91cC1nb2Fscy9ncm91cC1nb2FsLWRldGFpbHMvZ3JvdXAtZ29hbC1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"isGoalLoaded && groupGoal\\\" class=\\\"container\\\">\\r\\n    <mat-card class=\\\"example-card\\\">\\r\\n      <mat-card-header>\\r\\n        <mat-card-title> {{groupGoal.name}}\\r\\n        </mat-card-title>\\r\\n        <mat-card-subtitle>Siekio tipas</mat-card-subtitle>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content>\\r\\n        <p>\\r\\n          Siekio aprašymas\\r\\n          <br>\\r\\n          {{groupGoal.createdAt | date: 'yyyy-MM-dd'}}\\r\\n          <br>\\r\\n          <button *ngIf=\\\"isCurrentUserGroupLeader()\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"removeGoal()\\\">Pašalinti siekį</button>\\r\\n        </p>\\r\\n      </mat-card-content>\\r\\n      <mat-card-actions>\\r\\n        <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/goals/group']\\\">Grupės siekiai</button>\\r\\n      </mat-card-actions>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\"","import { UserService } from 'src/app/shared/services/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\nimport { GroupGoalService } from '../../../services/group/group-goal/group-goal.service';\r\n\r\n@Component({\r\n  selector: 'app-group-goal-details',\r\n  templateUrl: './group-goal-details.component.html',\r\n  styleUrls: ['./group-goal-details.component.css']\r\n})\r\nexport class GroupGoalDetailsComponent implements OnInit {\r\n  isGoalLoaded = false;\r\n  id: string;\r\n  groupGoal: any;\r\n  constructor(private _activatedRoute: ActivatedRoute,\r\n    private _groupGoalService: GroupGoalService,\r\n    private _router: Router,\r\n    private _userService: UserService) {\r\n    this._activatedRoute.params.subscribe((params: Params) => {\r\n      this.id = params['id'];\r\n      this._groupGoalService.getGroupGoal(this.id).subscribe((groupGoal: any) => {\r\n        console.log('group goal', groupGoal);\r\n        this.groupGoal = groupGoal;\r\n        this.isGoalLoaded = true;\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  removeGoal(): void {\r\n    this._groupGoalService.deleteGroupGaol(this.id).subscribe(() => {\r\n      this._router.navigate(['/goals/group']);\r\n    });\r\n  }\r\n\r\n  isCurrentUserGroupLeader(): boolean {\r\n    if (this._userService.getCurrentUsername() === this.groupGoal.group.leaderUsername) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9nb2Fscy9jb21wb25lbnRzL2dyb3VwLWdvYWxzL2dyb3VwLWdvYWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2dvYWxzL2NvbXBvbmVudHMvZ3JvdXAtZ29hbHMvZ3JvdXAtZ29hbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iXX0= */\"","module.exports = \"<div *ngIf=\\\"isGroupLoaded\\\" class=\\\"container\\\">\\r\\n  <div *ngIf=\\\"groupObject.group\\\">\\r\\n    <h5>Grupės siekiai</h5>\\r\\n    <div *ngIf=\\\"groupObject.isLeader\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-10\\\">\\r\\n\\r\\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteGroup()\\\">Pašalinti grupę</button>\\r\\n          <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/goals/groupusers']\\\">grupės nariai</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/goals/creategroupgoal']\\\">Sukurti siekį</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!groupObject.isLeader\\\">\\r\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"leaveGroup()\\\">Palikti grupę</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr>\\r\\n  <!-- ----------------------------------------------------------------- -->\\r\\n  <ng-container *ngIf=\\\"groupObject.group\\\">\\r\\n    <table mat-table [dataSource]=\\\"groupProgressObject\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n      <ng-container matColumnDef=\\\"goalDetails\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/goals/group', element.goal.id]\\\">\\r\\n            Siekio aprašymas</button>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Position Column -->\\r\\n      <ng-container matColumnDef=\\\"goal\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Siekis </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.goal.name}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"userGoalProgresses\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Narių progresas </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <ng-container *ngFor=\\\"let progress of element.userGoalProgresses\\\">\\r\\n            <a [routerLink]=\\\"['/dashboard/profile/others', progress.userDescription.id]\\\">{{progress.user.username}} </a>\\r\\n\\r\\n            <mat-checkbox [(ngModel)]=\\\"progress.isDone\\\" [disabled]=true></mat-checkbox>\\r\\n          </ng-container>\\r\\n\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- ----------------------------------------------------------------- -->\\r\\n  <div *ngIf=\\\"!groupObject.group\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/goals/creategroup']\\\">Grupės sukūrimas</button>\\r\\n    <app-group-invitation></app-group-invitation>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { GroupMembersService } from './../../services/group/group-members/group-members.service';\r\nimport { GroupService } from '../../services/group/group.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { GroupGoalProgressService } from '../../services/group/group-goal-progress/group-goal-progress.service';\r\n\r\n@Component({\r\n  selector: 'app-group-goals',\r\n  templateUrl: './group-goals.component.html',\r\n  styleUrls: ['./group-goals.component.css']\r\n})\r\nexport class GroupGoalsComponent implements OnInit {\r\n  isGroupLoaded = false;\r\n  groupObject: any;\r\n  groupProgressObject: any[];\r\n\r\n  displayedColumns: string[] = ['goalDetails', 'goal', 'userGoalProgresses'];\r\n  constructor(private _groupService: GroupService,\r\n    private _groupMembersService: GroupMembersService,\r\n    private _groupGoalProgressService: GroupGoalProgressService) {\r\n    this.setGroupData();\r\n  }\r\n\r\n  private setGroupData(): void {\r\n    this._groupService.getUserGroup().subscribe((groupObject: any) => {\r\n      this.groupObject = groupObject;\r\n      this.isGroupLoaded = true;\r\n      if (this.groupObject.group) {\r\n        this.setGroupProgress();\r\n      }\r\n    });\r\n  }\r\n\r\n  private setGroupProgress(): void {\r\n    const currentDate = new Date();\r\n    this._groupGoalProgressService.getSpecificGroupGoalsDayProgress(currentDate).subscribe((progress: any) => {\r\n      this.groupProgressObject = progress;\r\n      console.log('progress', this.groupProgressObject);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  deleteGroup() {\r\n    this._groupService.deleteGroup().subscribe((response: any) => {\r\n      location.reload();\r\n    });\r\n  }\r\n\r\n  leaveGroup() {\r\n    this._groupMembersService.leaveGroup().subscribe((response: any) => {\r\n      location.reload();\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZ29hbHMvY29tcG9uZW50cy9ncm91cC1nb2Fscy9ncm91cC1tZW1iZXJzL2dyb3VwLWludml0YXRpb24vZ3JvdXAtaW52aXRhdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngIf=\\\"isInvitationsLoaded\\\">\\r\\n  <mat-list role=\\\"list\\\">\\r\\n    <mat-list-item *ngFor=\\\"let invitation of invitationsObject\\\" role=\\\"listitem\\\">\\r\\n      {{invitation.leaderUsername}} kviečia į grupę.\\r\\n      <button mat-button (click)=\\\"acceptInvitation(invitation.leaderUsername)\\\">Priimti</button>\\r\\n      <button mat-button (click)=\\\"cancelInvitation(invitation)\\\">Atšaukti</button>\\r\\n    </mat-list-item>\\r\\n  </mat-list>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { GroupInvitationService } from '../../../../services/group/group-invitation/group-invitation.service';\r\n\r\n@Component({\r\n  selector: 'app-group-invitation',\r\n  templateUrl: './group-invitation.component.html',\r\n  styleUrls: ['./group-invitation.component.css']\r\n})\r\nexport class GroupInvitationComponent implements OnInit {\r\n  isInvitationsLoaded = false;\r\n  invitationsObject: any;\r\n\r\n  constructor(private _groupInvitationService: GroupInvitationService) {\r\n    this._groupInvitationService.getUserGroupInvitations().subscribe((invitations: any) => {\r\n      this.invitationsObject = invitations;\r\n      this.isInvitationsLoaded = true;\r\n      console.log(this.invitationsObject);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  acceptInvitation(leaderUsername: string) {\r\n    this._groupInvitationService.acceptInvitation(leaderUsername).subscribe((response: any) => {\r\n      location.reload();\r\n    });\r\n  }\r\n\r\n  cancelInvitation(invitation: any) {\r\n    console.log('cancel invitation', invitation);\r\n    this._groupInvitationService.cancelInvitation(invitation.id).subscribe((response: any) => {\r\n      const newList = [];\r\n      this.invitationsObject.forEach(currentInvitation => {\r\n        if (currentInvitation.id !== invitation.id) {\r\n          newList.push(currentInvitation);\r\n        }\r\n      });\r\n      this.invitationsObject = newList;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZ29hbHMvY29tcG9uZW50cy9ncm91cC1nb2Fscy9ncm91cC1tZW1iZXJzL2dyb3VwLXVzZXJzL2dyb3VwLXVzZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"isMembersLoaded\\\">\\r\\n  <button mat-raised-button [routerLink]=\\\"['/goals/group']\\\" color=\\\"primary\\\">grupės siekiai</button><br><br>\\r\\n\\r\\n\\r\\n  <form [formGroup]=\\\"newMemberForm\\\">\\r\\n    <ng-template>Naudotojo paštas</ng-template>\\r\\n    <mat-form-field>\\r\\n      <input matInput formControlName=\\\"memberUsernameControl\\\" required>\\r\\n    </mat-form-field>\\r\\n    <div>\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submit()\\\">Siųsti pakveitimą</button>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n  <mat-list role=\\\"list\\\">\\r\\n    <mat-list-item *ngFor=\\\"let member of membersObject\\\" role=\\\"listitem\\\">\\r\\n      {{member.firstName}} - {{member.lastName}}\\r\\n      <button mat-button (click)=\\\"removeGroupMember(member)\\\">Pašalinti</button>\\r\\n    </mat-list-item>\\r\\n  </mat-list>\\r\\n\\r\\n  TODO: GAL PADARYT, KAD RODYTU KAM ISSIUSTA\\r\\n\\r\\n</div>\\r\\n\"","import { GroupInvitationService } from './../../../../services/group/group-invitation/group-invitation.service';\r\nimport { GroupMembersService } from './../../../../services/group/group-members/group-members.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-group-users',\r\n  templateUrl: './group-users.component.html',\r\n  styleUrls: ['./group-users.component.css']\r\n})\r\nexport class GroupUsersComponent implements OnInit {\r\n  membersObject: any[];\r\n  isMembersLoaded = false;\r\n\r\n  newMemberForm: FormGroup;\r\n  constructor(private _formBuilder: FormBuilder,\r\n    private _groupMembersService: GroupMembersService,\r\n    private _groupInvitationService: GroupInvitationService) {\r\n    this._groupMembersService.getGroupMembers().subscribe((members: any) => {\r\n      this.membersObject = members;\r\n      this.isMembersLoaded = true;\r\n      console.log('members:', this.membersObject);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.newMemberForm = this._formBuilder.group({\r\n      memberUsernameControl: ['', Validators.email]\r\n    });\r\n  }\r\n\r\n  removeGroupMember(member: any) {\r\n    this._groupMembersService.removeGroupMember(member.username).subscribe((response) => {\r\n      const newList = [];\r\n      this.membersObject.forEach(currentMember => {\r\n        if (currentMember.username !== member.username) {\r\n          newList.push(currentMember);\r\n        }\r\n      });\r\n      this.membersObject = newList;\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this._groupInvitationService.sentGroupInvitation(this.newMemberForm.value.memberUsernameControl)\r\n      .subscribe(anything => console.log('išsiųsta'));\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZ29hbHMvY29tcG9uZW50cy9ncm91cC1nb2Fscy9sZWFkZXJib2FyZC9sZWFkZXJib2FyZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <button mat-raised-button [routerLink]=\\\"['/goals/group']\\\" color=\\\"primary\\\">group goals</button>\\r\\n    <mat-card>vardas | taskai</mat-card>\\r\\n    <mat-card>vardas | taskai</mat-card>\\r\\n    <mat-card>vardas | taskai</mat-card>\\r\\n    <mat-card>vardas | taskai</mat-card>\\r\\n    <mat-card>vardas | taskai</mat-card>\\r\\n    <mat-card>vardas | taskai</mat-card>\\r\\n    <mat-card>vardas | taskai</mat-card>\\r\\n    <mat-card>vardas | taskai</mat-card>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-leaderboard',\r\n  templateUrl: './leaderboard.component.html',\r\n  styleUrls: ['./leaderboard.component.css']\r\n})\r\nexport class LeaderboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  margin-left:10px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9nb2Fscy9jb21wb25lbnRzL3RvZGF5LWdvYWxzL3RvZGF5LWdvYWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2dvYWxzL2NvbXBvbmVudHMvdG9kYXktZ29hbHMvdG9kYXktZ29hbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuYnV0dG9uIHtcclxuICBtYXJnaW4tbGVmdDoxMHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"isGoalsLoaded\\\">\\r\\n  <h5>Mano siekiai</h5>\\r\\n  <table mat-table [dataSource]=\\\"goalsObject\\\" class=\\\"mat-elevation-z8\\\">\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"goal\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Siekis </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.goal.name}} </td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"goalProgress\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Progresas </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <mat-checkbox (click)=\\\"changeGoalProgressState(element.goalProgress)\\\" [checked]=\\\"element.goalProgress.isDone\\\">\\r\\n        </mat-checkbox>\\r\\n        <button *ngIf=\\\"element.goal.workoutId > 0\\\" mat-button\\r\\n          [routerLink]=\\\"['/workout/session', element.goal.workoutId]\\\" color=\\\"primary\\\">pradėti\\r\\n          treniruotę</button>\\r\\n\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\" *ngIf=\\\"isGroupGoalsLoaded\\\">\\r\\n  <ng-container *ngIf=\\\"groupGoalsObject\\\">\\r\\n    <h5>Grupės siekiai</h5>\\r\\n    <table mat-table [dataSource]=\\\"groupGoalsObject\\\" class=\\\"mat-elevation-z8\\\">\\r\\n      <!-- Position Column -->\\r\\n      <ng-container matColumnDef=\\\"goal\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Siekis </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.goal.name}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"goalProgress\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Progresas </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <mat-checkbox (click)=\\\"changeGroupProgressState(element.goalProgress)\\\"\\r\\n            [checked]=\\\"element.goalProgress.isDone\\\"></mat-checkbox>\\r\\n          <button *ngIf=\\\"element.goal.workoutId > 0\\\" mat-button\\r\\n            [routerLink]=\\\"['/workout/session', element.goal.workoutId]\\\" color=\\\"primary\\\">pradėti\\r\\n            treniruotę</button>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\"","import { GroupGoalProgressService } from './../../services/group/group-goal-progress/group-goal-progress.service';\r\nimport { GoalProgressService } from '../../services/goals/goal-progress/goal-progress.service';\r\nimport { GoalsService } from './../../services/goals/goals.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { GoalWithProgressModel } from '../../models/goal-with-progress.model';\r\nimport { GoalProgress } from '../../models/goal-progress.model';\r\n\r\n@Component({\r\n  selector: 'app-today-goals',\r\n  templateUrl: './today-goals.component.html',\r\n  styleUrls: ['./today-goals.component.css']\r\n})\r\nexport class TodayGoalsComponent implements OnInit {\r\n  isGroupGoalsLoaded = false;\r\n  isGoalsLoaded = false;\r\n  displayedColumns: string[] = ['goal', 'goalProgress'];\r\n  goalsObject: GoalWithProgressModel[] = [];\r\n  groupGoalsObject: any;\r\n  constructor(private _goalsService: GoalsService,\r\n    private _goalProgressService: GoalProgressService,\r\n    private _groupGoalProgressService: GroupGoalProgressService) {\r\n    this.setGoalsProgressData();\r\n  }\r\n\r\n  private setGoalsProgressData(): void {\r\n    this.setGroupGoalsProgress();\r\n    this.setGoalsProgress();\r\n  }\r\n\r\n  private setGoalsProgress(): void {\r\n    this._goalsService.getUserTodayGoalWithProgress().subscribe((goalWithProgress: any[]) => {\r\n      this.goalsObject = goalWithProgress;\r\n      console.log('mygoal progress', this.goalsObject);\r\n      this.isGoalsLoaded = true;\r\n    });\r\n  }\r\n\r\n  private setGroupGoalsProgress(): void {\r\n    this._groupGoalProgressService.getTodayUserGroupGoalsProgress().subscribe((goalWithProgress: any) => {\r\n      this.groupGoalsObject = goalWithProgress;\r\n      console.log('groupgoal progress', this.groupGoalsObject);\r\n      this.isGroupGoalsLoaded = true;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  changeGoalProgressState(goalProgress: any): void {\r\n    this._goalProgressService.updateProgressState(goalProgress).subscribe((isDone: boolean) => {\r\n      goalProgress.isDone = isDone;\r\n    });\r\n  }\r\n\r\n  changeGroupProgressState(GroupGoalProgress: any): void {\r\n    this._groupGoalProgressService.updateGroupGoalProgressState(GroupGoalProgress)\r\n      .subscribe((progress: any) => {\r\n        GroupGoalProgress.isDone = progress.isDone;\r\n      });\r\n  }\r\n\r\n}\r\n","import { GroupGoalDetailsComponent } from './components/group-goals/group-goal-details/group-goal-details.component';\r\nimport { CreateGroupGoalComponent } from './components/group-goals/create-group-goal/create-group-goal.component';\r\nimport { CreateGroupComponent } from './components/group-goals/create-group/create-group.component';\r\nimport { LeaderboardComponent } from './components/group-goals/leaderboard/leaderboard.component';\r\nimport { GroupGoalsComponent } from './components/group-goals/group-goals.component';\r\nimport { CreateGoalComponent } from './components/goals/create-goal/create-goal.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GoalsComponent } from './components/goals/goals.component';\r\nimport { TodayGoalsComponent } from './components/today-goals/today-goals.component';\r\nimport { GoalDetailsComponent } from './components/goals/goal-details/goal-details.component';\r\nimport { LoggedInGuard } from 'src/app/shared/guards/logged-in.guard';\r\nimport { GroupUsersComponent } from './components/group-goals/group-members/group-users/group-users.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: GoalsComponent, canActivate: [LoggedInGuard]},\r\n  { path: 'creategoal', component: CreateGoalComponent, canActivate: [LoggedInGuard]},\r\n  { path: 'creategroupgoal', component: CreateGroupGoalComponent, canActivate: [LoggedInGuard]},\r\n  { path: 'creategroup', component: CreateGroupComponent, canActivate: [LoggedInGuard]},\r\n  { path: 'group', component: GroupGoalsComponent, canActivate: [LoggedInGuard]},\r\n  { path: 'groupusers', component: GroupUsersComponent, canActivate: [LoggedInGuard]},\r\n  { path: 'groupleaderboard', component: LeaderboardComponent, canActivate: [LoggedInGuard]},\r\n  { path: 'today', component: TodayGoalsComponent, canActivate: [LoggedInGuard]},\r\n  { path: ':id', component: GoalDetailsComponent, canActivate: [LoggedInGuard]},\r\n  { path: 'group/:id', component: GroupGoalDetailsComponent, canActivate: [LoggedInGuard]}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GoalsRoutingModule { }\r\n","import { CreateGroupGoalComponent } from './components/group-goals/create-group-goal/create-group-goal.component';\r\nimport { GroupInvitationComponent } from './components/group-goals/group-members/group-invitation/group-invitation.component';\r\nimport { CreateGroupComponent } from './components/group-goals/create-group/create-group.component';\r\nimport { LeaderboardComponent } from './components/group-goals/leaderboard/leaderboard.component';\r\nimport { GoalDetailsComponent } from './components/goals/goal-details/goal-details.component';\r\nimport { GroupGoalsComponent } from './components/group-goals/group-goals.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { GoalsRoutingModule } from './goals-routing.module';\r\nimport { GoalsComponent } from './components/goals/goals.component';\r\nimport { CreateGoalComponent } from './components/goals/create-goal/create-goal.component';\r\nimport { MaterialModule } from '../../shared/angular-material/angular-material.module';\r\nimport { TodayGoalsComponent } from './components/today-goals/today-goals.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GroupUsersComponent } from './components/group-goals/group-members/group-users/group-users.component';\r\nimport { GroupGoalDetailsComponent } from './components/group-goals/group-goal-details/group-goal-details.component';\r\n@NgModule({\r\n  imports: [\r\n    GoalsRoutingModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    GoalsComponent,\r\n    CreateGoalComponent,\r\n    GroupGoalsComponent,\r\n    TodayGoalsComponent,\r\n    GoalDetailsComponent,\r\n    GroupUsersComponent,\r\n    LeaderboardComponent,\r\n    CreateGroupComponent,\r\n    GroupInvitationComponent,\r\n    GroupGoalDetailsComponent,\r\n    CreateGroupGoalComponent\r\n  ]\r\n})\r\nexport class GoalsModule { }\r\n","export class GoalProgress {\r\n  id: number;\r\n  isDone: boolean;\r\n  createdAt: Date;\r\n  isDummy: boolean;\r\n\r\n  constructor(goalProgress: Partial<GoalProgress>) {\r\n    Object.assign(this, goalProgress);\r\n  }\r\n\r\n}\r\n","import { Goal } from './goal.model';\r\nimport { GoalProgress } from './goal-progress.model';\r\n\r\nexport class GoalWithProgressModel {\r\n  goal: Goal;\r\n  goalProgressCollection: GoalProgress[] = [];\r\n\r\n  constructor(goalWithProgressModel: Partial<GoalWithProgressModel>) {\r\n    Object.assign(this, goalWithProgressModel);\r\n }\r\n}\r\n","export class Goal {\r\n  id: number;\r\n  createdAt: Date;\r\n  name: string;\r\n\r\n  constructor(goal: Partial<Goal>) {\r\n    Object.assign(this, goal);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\nimport { Observable } from 'rxjs';\r\nimport { GoalProgress } from '../../../models/goal-progress.model';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GoalProgressService {\r\n\r\n  constructor(private _http: HttpClient, private _userService: UserService) { }\r\n\r\n  updateProgressState(goalProgress: GoalProgress): Observable<boolean> {\r\n    const body = JSON.stringify({\r\n      id: goalProgress.id,\r\n      isDone: !goalProgress.isDone\r\n    });\r\n    return this._http.patch<GoalProgress>(this._userService.BACKURL + 'api/goalProgress', body,\r\n      { headers: this._userService.getHeaders() }).pipe(\r\n        map(progress => {\r\n          return progress.isDone;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { GoalProgress } from './../../models/goal-progress.model';\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { GoalWithProgressModel } from '../../models/goal-with-progress.model';\r\nimport { Goal } from '../../models/goal.model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GoalsService {\r\n\r\n  constructor(private _http: HttpClient, private _userService: UserService) { }\r\n\r\n  deleteUserGoal(id: string): Observable<any> {\r\n    return this._http.delete(this._userService.BACKURL + 'api/goals/' + id, { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n  createUserGoal(goalType: any, name: string, workout: string = '-1'): Observable<Object> {\r\n    const body = JSON.stringify({\r\n      Goalname: name,\r\n      GoalType: goalType,\r\n      WorkoutId: workout\r\n    });\r\n    return this._http.post(this._userService.BACKURL + 'api/goals/create', body,\r\n      { headers: this._userService.getHeaders() });\r\n    // .pipe(\r\n    //   map((userGoal: any) => {\r\n    //     return this.mapGoal(userGoal);\r\n    //   }));\r\n  }\r\n\r\n  getUserGoal(id: string): Observable<Goal> {\r\n    return this._http.get<Goal[]>(this._userService.BACKURL + 'api/goals/' + id, { headers: this._userService.getHeaders() }).pipe(\r\n      map(goal => {\r\n        return this.mapGoal(goal);\r\n      })\r\n    );\r\n  }\r\n\r\n  getUserTodayGoalWithProgress(): Observable<GoalWithProgressModel[]> {\r\n    return this._http.get<GoalWithProgressModel[]>(this._userService.BACKURL + 'api/goals/todayProgress',\r\n      { headers: this._userService.getHeaders() });\r\n    // .pipe(\r\n    //   map((goalWithProgress: any) => {\r\n    //     return this.mapGoalsWithProgress(goalWithProgress);\r\n    //   }));\r\n  }\r\n\r\n  GetUserGoalsWithProgress(date: Date, limit: number = 20): Observable<GoalWithProgressModel[]> {\r\n    const body = JSON.stringify({\r\n      DateTimeOffset: date.toJSON(),\r\n      DayLimit: limit\r\n    });\r\n    return this._http.post<GoalWithProgressModel[]>(this._userService.BACKURL + 'api/goals/progressHistory',\r\n      body, { headers: this._userService.getHeaders() })\r\n      .pipe(\r\n        map((goalsWithProgress: any) => {\r\n          return this.mapGoalsWithProgress(goalsWithProgress);\r\n        }));\r\n  }\r\n\r\n  private mapGoal(goal: any): Goal {\r\n    if (goal) {\r\n      return new Goal({\r\n        id: goal.id,\r\n        createdAt: new Date(goal.createdAt),\r\n        name: goal.name\r\n      });\r\n    }\r\n  }\r\n\r\n  private mapGoalsWithProgress(goalsWithProgress: any): GoalWithProgressModel[] {\r\n    const goalsProgress: GoalWithProgressModel[] = [];\r\n    goalsWithProgress.forEach(goal => {\r\n      const progressCollection = [];\r\n      goal.goalProgressCollection.forEach(goalProgress => {\r\n        progressCollection.push(new GoalProgress({\r\n          createdAt: new Date(goalProgress.createdAt),\r\n          id: goalProgress.id,\r\n          isDone: goalProgress.isDone,\r\n          isDummy: goalProgress.isDummy\r\n        }));\r\n      });\r\n      goalsProgress.push(new GoalWithProgressModel({\r\n        goal: new Goal({\r\n          id: goal.id,\r\n          createdAt: new Date(goal.createdAt),\r\n          name: goal.name\r\n        }),\r\n        goalProgressCollection: progressCollection\r\n      })\r\n      );\r\n    });\r\n    return goalsProgress;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupGoalProgressService {\r\n\r\n  constructor(private _http: HttpClient, private _userService: UserService) { }\r\n\r\n  getTodayUserGroupGoalsProgress(): Observable<any> {\r\n    return this._http.get(this._userService.BACKURL + 'api/groupGoalProgress',\r\n      { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n  getSpecificGroupGoalsDayProgress(date: Date): Observable<Object> {\r\n    const body = JSON.stringify({\r\n      GroupProgressDate: date,\r\n    });\r\n    return this._http.post(this._userService.BACKURL + 'api/groupGoalProgress', body,\r\n      { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n  updateGroupGoalProgressState(goalProgress: any): Observable<any> {\r\n    const body = JSON.stringify({\r\n      id: goalProgress.id,\r\n      isDone: !goalProgress.isDone\r\n    });\r\n    return this._http.patch(this._userService.BACKURL + 'api/groupGoalProgress', body,\r\n      { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupGoalService {\r\n\r\n  constructor(private _http: HttpClient, private _userService: UserService) { }\r\n\r\n  deleteGroupGaol(id: string): Observable<any> {\r\n    return this._http.delete(this._userService.BACKURL + 'api/groupGoals/' + id, { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n  createGroupGoal(goalType: any, name: string, workout: string = '-1'): Observable<Object> {\r\n    const body = JSON.stringify({\r\n      Name: name,\r\n      GoalType: goalType,\r\n      WorkoutId: workout\r\n    });\r\n    return this._http.post(this._userService.BACKURL + 'api/groupGoals', body,\r\n      { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n  getGroupGoal(id: string): Observable<any> {\r\n    return this._http.get(this._userService.BACKURL + 'api/groupGoals/' + id, { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupInvitationService {\r\n\r\n  constructor(private _http: HttpClient, private _userService: UserService) { }\r\n\r\n  getUserGroupInvitations(): Observable<any> {\r\n    return this._http.get(this._userService.BACKURL + 'api/invitation',\r\n      { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n  sentGroupInvitation(memberEmail: string): Observable<any> {\r\n    const body = JSON.stringify({\r\n      MemberUsername: memberEmail,\r\n    });\r\n    return this._http.post(this._userService.BACKURL + 'api/invitation', body,\r\n      { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n  cancelInvitation(id: number): Observable<any> {\r\n    return this._http.delete(this._userService.BACKURL + 'api/invitation/' + id,\r\n      { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n  acceptInvitation(LeaderUsername: string): Observable<any> {\r\n    const body = JSON.stringify({\r\n      LeaderUsername: LeaderUsername,\r\n    });\r\n    return this._http.post(this._userService.BACKURL + 'api/invitation/accept', body,\r\n      { headers: this._userService.getHeaders() });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupMembersService {\r\n\r\n  constructor(private _http: HttpClient, private _userService: UserService) { }\r\n\r\n  getGroupMembers(): Observable<any> {\r\n    return this._http.get(this._userService.BACKURL + 'api/groupMembers',\r\n      { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n  removeGroupMember(username: string): Observable<any> {\r\n    const body = JSON.stringify({\r\n      MemberUsername: username,\r\n    });\r\n    return this._http.post(this._userService.BACKURL + 'api/groupMembers/specific', body,\r\n      { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n  leaveGroup(): Observable<any> {\r\n    return this._http.delete(this._userService.BACKURL + 'api/groupMembers',\r\n      { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupService {\r\n\r\n  constructor(private _http: HttpClient, private _userService: UserService) { }\r\n\r\n  getUserGroup(): Observable<any> {\r\n    return this._http.get(this._userService.BACKURL + 'api/group',\r\n      { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n  createGroup(name: string): Observable<Object> {\r\n    const body = JSON.stringify({\r\n      GroupName: name,\r\n    });\r\n    return this._http.post(this._userService.BACKURL + 'api/group', body,\r\n      { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n  deleteGroup(): Observable<Object> {\r\n    return this._http.delete(this._userService.BACKURL + 'api/group',\r\n      { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}