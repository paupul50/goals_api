{"version":3,"sources":["webpack:///./src/app/shared/services/workout/workout.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAA2C;AACO;AAEJ;AAK9C;IAEE,wBAAoB,KAAiB,EAAU,YAAyB;QAApD,UAAK,GAAL,KAAK,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAa;IAAI,CAAC;IAE7E,sCAAa,GAAb,UAAc,EAAU;QACtB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,cAAc,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACzH,CAAC;IAED,sCAAa,GAAb,UAAc,IAAY,EAAE,WAAkB;QAC5C,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;YAC1B,IAAI,EAAE,IAAI;YACV,WAAW,EAAE,WAAW;SACzB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,aAAa,EAAE,IAAI,EACpE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,wCAAe,GAAf;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,kBAAkB,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACrH,CAAC;IAED,8CAAqB,GAArB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,oBAAoB,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACvH,CAAC;IAED,+CAAsB,GAAtB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,yBAAyB,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IAC5H,CAAC;IAED,yCAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,mBAAmB,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACtH,CAAC;IAED,uCAAc,GAAd,UAAe,EAAU;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,cAAc,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACtH,CAAC;IAnCU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG2B,+DAAU,EAAwB,yDAAW;OAF7D,cAAc,CAoC1B;IAAD,qBAAC;CAAA;AApC0B","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from '../user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WorkoutService {\r\n\r\n  constructor(private _http: HttpClient, private _userService: UserService) { }\r\n\r\n  deleteWorkout(id: string): Observable<any> {\r\n    return this._http.delete(this._userService.BACKURL + 'api/workout/' + id, { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n  createWorkout(name: string, routePoints: any[]): Observable<any> {\r\n    const body = JSON.stringify({\r\n      Name: name,\r\n      RoutePoints: routePoints\r\n    });\r\n    return this._http.post(this._userService.BACKURL + 'api/workout', body,\r\n      { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n  getUserWorkouts(): Observable<any> {\r\n    return this._http.get(this._userService.BACKURL + 'api/workout/user', { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n  getUserUnusedWorkouts(): Observable<any> {\r\n    return this._http.get(this._userService.BACKURL + 'api/workout/unused', { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n  getGroupUnusedWorkouts(): Observable<any> {\r\n    return this._http.get(this._userService.BACKURL + 'api/workout/groupUnused', { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n  getGroupWorkouts(): Observable<any> {\r\n    return this._http.get(this._userService.BACKURL + 'api/workout/group', { headers: this._userService.getHeaders() });\r\n  }\r\n\r\n  getUserWorkout(id: string): Observable<any> {\r\n    return this._http.get(this._userService.BACKURL + 'api/workout/' + id, { headers: this._userService.getHeaders() });\r\n  }\r\n}\r\n"],"sourceRoot":""}